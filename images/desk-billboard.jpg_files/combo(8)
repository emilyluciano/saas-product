YUI.add("flickr-photos-setSafetyLevel-updater",function(e){"use strict";function t(e,t){var n={};return e.fullResponse?(n.photo_ids=e.photoId,n.full_response=1):n.photo_id=e.photoId,n.safety_level=e.safetyLevel+1,t.callAPI("flickr.photos.setSafetyLevel",n).then(function(e){if("errors"in e)return e.api="setSafety",e},function(n){throw e.fullResponse?(n.photoIds=e.photoId,n.returnApi="setSafety"):t[n.fatal?"error":"debug"]("[flickr-photos-setSafetyLevel-updater] failed getting or processing API response:",n),n})}e.namespace("ModelUpdaters")["flickr-photos-setSafetyLevel"]={run:t}},"@VERSION@",{requires:["flickr-promise"]});
YUI.add("photo-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){return e.ModelFetchers["flickr-photos-getInfo"].run(t,this.appContext)},update:function(t,n){var r=[];return("title"in n||"description"in n)&&r.push(e.ModelUpdaters["flickr-photos-setMeta"].run({photoId:t,title:n.title?n.title.newVal:this.getValue(t,"title"),description:n.description?n.description.newVal:this.getValue(t,"description")},this.appContext)),"license"in n&&r.push(e.ModelUpdaters["flickr-photos-licenses-setLicense"].run({photoId:t,license:n.license.newVal},this.appContext)),"safetyLevel"in n&&r.push(e.ModelUpdaters["flickr-photos-setSafetyLevel"].run({photoId:t,safetyLevel:n.safetyLevel.newVal},this.appContext)),e.Promise.all(r)},batchUpdate:function(t,n){var r=[];return"safetyLevel"in n&&r.push(e.ModelUpdaters["flickr-photos-setSafetyLevel"].run({photoId:t,safetyLevel:parseInt(n.safetyLevel,10),fullResponse:1},this.appContext)),"title"in n&&"description"in n?r.push(e.ModelUpdaters["flickr-photos-setMeta"].run({photoId:t,title:n.title,description:n.description,fullResponse:1},this.appContext)):"title"in n?r.push(e.ModelUpdaters["flickr-photos-setMeta"].run({photoId:t,title:n.title,fullResponse:1},this.appContext)):"description"in n&&r.push(e.ModelUpdaters["flickr-photos-setMeta"].run({photoId:t,description:n.description,fullResponse:1},this.appContext)),"license"in n&&r.push(e.ModelUpdaters["flickr-photos-licenses-setLicense"].run({photoId:t,license:n.license,fullResponse:1},this.appContext)),e.Promise.all(r)}},attributes:{owner:{isModel:!0},engagement:{isModel:!0},title:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},description:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:""},mediaType:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:"photo"},isVideo:{readOnly:!0,derivedBy:["mediaType"],getter:function(e,t){var n=this.getValue(t,"mediaType");return n==="video"}},isOwner:{readOnly:!0,derivedBy:["owner"],getter:function(e,t){var n=this.getValue(t,"owner"),r=this.appContext.getViewer();return!!r.signedIn&&n.getValue("id")===r.nsid}},sizes:{},descendingSizes:{readOnly:!0,derivedBy:["sizes"],defaultFn:function(e){var t,n,r=[];this._descendingSizesMemo=this._descendingSizesMemo||{};if(this._descendingSizesMemo[e])return this._descendingSizesMemo[e];t=this.getValue(e,"sizes");for(n in t)r.push(t[n]),r[r.length-1].key=n;return r.sort(function(e,t){return e.width<t.width?1:e.width===t.width?e.height<t.height?1:e.height===t.height?e.key==="o"?-1:1:-1:-1}),this._descendingSizesMemo[e]=r,r}},ascendingSizes:{readOnly:!0,derivedBy:["descendingSizes"],defaultFn:function(e){return this.getValue(e,"descendingSizes").reverse()}},aspectRatio:{readOnly:!0,derivedBy:["descendingSizes","rotation"],defaultFn:function(e){var t=this.getValue(e,"descendingSizes")[0];return t.key==="o"&&this.getValue(e,"rotation")%180!==0?t.height/t.width:t.width/t.height}},isHD:{},secret:{},needsInterstitial:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1},canComment:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!0},canAddMeta:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!0},license:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},isMarketplacePrintable:{defaultFn:function(e){return!1}},oWidth:{},oHeight:{},safetyLevel:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},url:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){var t=this.getValue(e,"owner");return t?"/photos/"+t.getValue("pathAlias")+"/"+e:undefined}},guestpass:{},rotation:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},hasInvalidColorspaceForPrint:{validator:function(t){return e.AttributeHelpers.validateBoolean(t)},setter:function(t){return e.AttributeHelpers.coerceBoolean(t)},defaultValue:!1}},getLargestSize:function(e,t){return this.getSizeToFit(e,{width:Number.MAX_VALUE,height:Number.MAX_VALUE},t)},getGuestpass:function(t){var n=this;return new e.Promise(function(e,r){n.getValue(t,"guestpass")?e():n.appContext.callAPI("flickr.sharing.createGuestpass",{photo:t}).then(function(r){n.setValue(t,"guestpass",r.guestpass.url),e()})})},getSizeToFit:function(t,n,r){r=r||{};var i=this,s,o=n.width,u=n.height,a=!!r.cropToFit,f=r.includeSquare,l=this.getValue(t,"sizes"),c=r.excludeSizes||["o"],h=r.includeSizes||Object.keys(l),p,d,v;return this._getSizeToFitMemo=this._getSizeToFitMemo||{},s=[t,o,u,a,c.sort().join(""),h.sort().join("")].join("_"),this._getSizeToFitMemo[s]||(e.Object.each(l,function(e,n){var r,i,s,l,m,g;if(e&&c.indexOf(n)===-1&&h.indexOf(n)>-1)if(f||!this.isSizeSquare(n)||this.isPhotoSquare(t)){r=parseInt(e.width,10),i=parseInt(e.height,10),a&&r>=o&&i>=u?s=!0:!a&&(r>=o||i>=u)&&(s=!0),s&&(p?(l=parseInt(p.height,10),i<l&&(p=e)):p=e);if(d){m=parseInt(d.width,10),g=parseInt(d.height,10);if(r>m||i>g)d=e}else d=e}v=p||d},this),this._getSizeToFitMemo[s]=v,this._getSizeToFitMemoTimer||(this._getSizeToFitMemoTimer=setTimeout(function(){delete i._getSizeToFitMemo,delete i._getSizeToFitMemoTimer},1e4))),e.clone(this._getSizeToFitMemo[s],!0)},getSizeIfExact:function(e,t){var n=this.getValue(e,"sizes"),r,i;return Object.keys(n).some(function(e){return e==="o"?!1
:(i=n[e],t.height===i.height&&t.width===i.width?(r=i,!0):!1)}),r},isSizeSquare:function(e){var t={sq:"sq",q:"q"};return!!t[e]},isPhotoSquare:function(t){var n;return this._isPhotoSquareMemo=this._isPhotoSquareMemo||{},typeof this._isPhotoSquareMemo[t]!="undefined"?n=this._isPhotoSquareMemo[t]:(n=!0,e.Object.some(this.getValue(t,"sizes"),function(e,t){var r;if(e&&e.width&&e.height&&!this.isSizeSquare(t)){r=parseInt(e.width,10)/parseInt(e.height,10);if(r!==1)return n=!1,!0}},this),this._isPhotoSquareMemo[t]=n),n}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-photos-getInfo-fetcher","flickr-photos-setPerms-updater","flickr-photos-setMeta-updater","flickr-photos-licenses-setLicense-updater","flickr-photos-setSafetyLevel-updater","attribute-helpers"]});
YUI.add("flickr-favorites-getList-fetcher",function(e){"use strict";function t(t){var n={extras:e.APIHelper.request.getRebootPhotoExtras(),per_page:t.perPage||20,page:t.page||1,get_user_info:1};if(t.id)n.user_id=t.id;else{if(!t.pathAlias)throw new Error("[flickr-favorites-getList-fetcher] `id` or `pathAlias` is required.");n.path_alias=t.pathAlias}return n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=t[4],a=t[5],f={id:r.user.nsid,pathAlias:r.user.pathAlias};return f.owner=e.APIHelper.response.parsePerson(r.user),s.exists(f.owner.id)||s.add(f.owner),f.owner=s.proxy(f.owner.id),f.photoPageList=e.APIHelper.response.parsePhotos({photos:r.photos.photo,personModelRegistry:s,photoModelRegistry:i,photoEngagementModelRegistry:u,photoStatsModelRegistry:a}),o.exists(f.id)?o.setValue(f.id,"photoPageList",f.photoPageList):o.add(f),f.photoPageList}function r(t,n){var r=this,i=n.getViewer().signedIn?"flickr.favorites.getList":"flickr.favorites.getPublicList";return e.Promise.all([n.callAPI(i,this._processParams(t)),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("favorite-models"),n.getModelRegistry("photo-engagement-models"),n.getModelRegistry("photo-stats-models")]).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-favorites-getList-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-favorites-getList"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-models","person-models","favorite-models","photo-engagement-models","photo-stats-models"]});
YUI.add("flickr-groups-pools-add-creator",function(e){"use strict";function t(t){var n={photo_id:t.photoID,group_id:e.Models["group-pool-models"].extractGroupFromCompoundId(t.groupID)};return n}function n(e,t){var n=e.apiResponse,r=e.groupPoolModel,i=e.photoModel,s=e.photoGroupsModelRegistry,o=e.photoContextsModelRegistry,u=e.unfilteredGroupPoolModel;if(n.stat==="ok")return r&&!r.hasPhoto(i.getValue("id"))&&(r.addPhotoLocal(i),r.getValue("group").setValue("poolCount",r.getValue("group").getValue("poolCount")+1)),u&&u.hasPhoto(i.getValue("id"))&&u.addPhotoLocal(i),s.exists(t.photoID)&&!s.getValue(t.photoID,"groups").getFromListByID(t.unfilteredGroupId)&&(s.getValue(t.photoID,"groups").prependToList(r),s.setValue(t.photoID,"total",s.getValue(t.photoID,"total")+1)),o.exists(t.photoID)&&!o.getValue(t.photoID,"contexts").getFromListByID(t.unfilteredGroupId)&&(o.setValue(t.photoID,"totalGroups",o.getValue(t.photoID,"totalGroups")+1),o.getValue(t.photoID,"contexts").appendToList(r)),r}function r(t,n){var r=this,i=this._processParams(t),s=t.registryName||"group-pool-models",o={apiResponse:n.callAPI("flickr.groups.pools.add",i),groupPoolModel:n.getModel(s,t.groupID),photoModel:n.getModel("photo-models",t.photoID),photoGroupsModelRegistry:n.getModelRegistry("photo-groups-models"),photoContextsModelRegistry:n.getModelRegistry("photo-contexts-models")};return t.unfilteredGroupId=i.group_id,s!=="group-pool-models"&&(o.unfilteredGroupPoolModel=n.getModel("group-pool-models",t.unfilteredGroupId)),(new e.FlickrPromise(o)).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-add-creator] failed getting or processing API response:",e),e})}e.namespace("ModelCreators")["flickr-groups-pools-add"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","group-pool-models"],optional:[]});
YUI.add("flickr-groups-pools-remove-deletor",function(e){"use strict";function t(t){var n={photo_id:t.photoID,group_id:e.Models["group-pool-models"].extractGroupFromCompoundId(t.groupID)};return n}function n(e,t){var n=e.apiResponse,r=e.groupPoolModelRegistry,i=e.photoModelRegistry,s=e.photoGroupsModelRegistry,o=e.photoContextsModelRegistry,u=e.unfilteredGroupPoolModelRegistry;if(n.stat==="ok")return o.exists(t.photoID)&&o.getValue(t.photoID,"contexts").getFromListByID(t.unfilteredGroupId)&&(o.setValue(t.photoID,"totalGroups",o.getValue(t.photoID,"totalGroups")-1),o.getValue(t.photoID,"contexts").removeFromList(t.unfilteredGroupId)),s.exists(t.photoID)&&s.getValue(t.photoID,"groups").getFromListByID(t.unfilteredGroupId)&&(s.setValue(t.photoID,"total",s.getValue(t.photoID,"total")-1),s.getValue(t.photoID,"groups").removeFromList(t.unfilteredGroupId)),r&&(r.hasPhoto(i.getValue("id"))&&r.removePhotoLocal(i),r.getValue("group").setValue("poolCount",r.getValue("group").getValue("poolCount")-1)),u&&u.hasPhoto(i.getValue("id"))&&u.removePhotoLocal(i),r}function r(t,n){var r=this,i=this._processParams(t),s=t.registryName||"group-pool-models",o={apiResponse:n.callAPI("flickr.groups.pools.remove",i),groupPoolModelRegistry:n.getModel(s,t.groupID),photoModelRegistry:n.getModel("photo-models",t.photoID),photoGroupsModelRegistry:n.getModelRegistry("photo-groups-models"),photoContextsModelRegistry:n.getModelRegistry("photo-contexts-models")};return t.unfilteredGroupId=i.group_id,s!=="group-pool-models"&&(o.unfilteredGroupPoolModelRegistry=n.getModel("group-pool-models",t.unfilteredGroupId)),(new e.FlickrPromise(o)).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-remove-deletor] failed getting or processing API response:",e),e})}e.namespace("ModelDeletors")["flickr-groups-pools-remove"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","group-pool-models"],optional:[]});
YUI.add("flickr-groups-invite-photo-invite-creator",function(e){"use strict";function t(t,n){var r={},i=e.Models["group-pool-models"].extractGroupFromCompoundId(t.groupID);return r.photo_id=t.photoID,r.group_id=i,e.Promise.all([n.callAPI("flickr.groups.invite.photo.invite",r),n.getModel("group-pool-models",i),n.getModelRegistry("photo-group-invitation-models"),n.getModelRegistry("photo-group-invitations-models")]).then(function(e){var r=e[0],s=e[1],o=e[2],u=e[3],a,f,l;if(r.stat==="ok")return a=[t.photoID,i].join("-"),f={id:a,photoId:t.photoID,groupId:i,invitedBy:n.getViewer().nsid},l=o.exists(a)?o.proxy(a):o.add(f),u.exists(t.photoID)&&!u.getValue(t.photoID,"invitations").getFromListByID(a)&&(u.getValue(t.photoID,"groups").prependToList(s),u.getValue(t.photoID,"invitations").prependToList(l),u.setValue(t.photoID,"total",u.getValue(t.photoID,"total")+1)),s},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-invite-photo-invite] failed getting or processing API response:",e),e})}e.namespace("ModelCreators")["flickr-groups-invite-photo-invite"]={run:t}},"@VERSION@",{requires:["flickr-promise","group-pool-models"],optional:[]});
YUI.add("flickr-groups-invite-photo-cancel-deletor",function(e){"use strict";function t(t,n){var r={},i=e.Models["group-pool-models"].extractGroupFromCompoundId(t.groupID);return r.photo_id=t.photoID,r.group_id=i,e.Promise.all([n.callAPI("flickr.groups.invite.photo.cancel",r),n.getModel("group-pool-models",i),n.getModelRegistry("photo-group-invitation-models"),n.getModelRegistry("photo-group-invitations-models")]).then(function(e){var n=e[0],r=e[1],s=e[2],o=e[3],u;if(n.stat==="ok")return u=[t.photoID,i].join("-"),o.exists(t.photoID)&&o.getValue(t.photoID,"invitations").getFromListByID(u)&&(o.setValue(t.photoID,"total",o.getValue(t.photoID,"total")-1),o.getValue(t.photoID,"groups").removeFromList(i),o.getValue(t.photoID,"invitations").removeFromList(u)),s.remove(u),r},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-invite-photo-cancel] failed getting or processing API response:",e),e})}e.namespace("ModelDeletors")["flickr-groups-invite-photo-cancel"]={run:t}},"@VERSION@",{requires:["flickr-promise","group-pool-models"],optional:[]});
YUI.add("group-pool-by-person-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.Models["group-pool-models"],{name:this.name,attributes:e.merge(e.Models["group-pool-models"].prototype.attributes,{personFilter:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:null}})})},"@VERSION@",{requires:["attribute-helpers","group-pool-models","flickr-groups-pools-getPhotos-fetcher","flickr-groups-pools-add-creator","flickr-groups-pools-remove-deletor","flickr-groups-invite-photo-invite-creator","flickr-groups-invite-photo-cancel-deletor"]});
YUI.add("group-pool-by-tag-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.Models["group-pool-models"],{name:this.name,attributes:{tagFilter:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)},defaultValue:null}}})},"@VERSION@",{requires:["attribute-helpers"]});
YUI.add("flickr-groups-pools-getPhotos-fetcher",function(e){"use strict";function t(t){var n={extras:e.APIHelper.request.getRebootPhotoExtras()+","+e.APIHelper.request.getRebootGroupExtras(),per_page:t.perPage||20,page:t.page||1,get_group_info:1};if(t.id)n.group_id=e.Models["group-pool-models"].extractGroupFromCompoundId(t.id);else{if(!t.pathAlias)throw new Error("[flickr-groups-pools-getPhotos-fetcher] `id` or `pathAlias` is required.");n.group_path_alias=t.pathAlias}return t.withPhotoId&&(n.jump_to=t.withPhotoId),t.privacyFilter&&(n.privacy_filter=t.privacyFilter),t.safeSearch&&(n.safe_search=t.safeSearch),t.media&&(n.media=t.media),t.personFilter&&(n.user_id=t.personFilter),t.tagFilter&&(n.tags=t.tagFilter),n}function n(t,n){var r=t.apiResponse,i=t.photoModelRegistry,s=t.personModelRegistry,o=t.groupPoolModelRegistry,u=t.groupPoolByPersonModelRegistry,a=t.groupPoolByTagModelRegistry,f=t.photoEngagementModelRegistry,l=t.photoStatsModelRegistry,c=t.groupModelRegistry,h,p,d,v;return r.group.pathAlias=r.group.pathalias===""?null:r.group.pathalias,h=c.parseGroupModel(r.group.nsid,r.group.pathAlias,r.group),c.exists(h.id)||c.add(h),p={pathAlias:r.group.pathAlias,group:c.proxy(h.id),filteredPoolCount:r.group.poolCount},d=e.APIHelper.response.parsePhotos({photos:r.photos.photo,personModelRegistry:s,photoModelRegistry:i,photoEngagementModelRegistry:f,photoStatsModelRegistry:l}),p.photoPageList={perPage:r.photos.perpage,page:r.photos.page,pageContent:d,totalItems:p.filteredPoolCount},n.personFilter?(p.id=e.Models["group-pool-models"].buildCompoundId(r.group.nsid,n.personFilter),p.personFilter=n.personFilter,p.filteredPoolCount=r.photos.total,v=u):n.tagFilter?(p.id=e.Models["group-pool-models"].buildCompoundId(r.group.nsid,n.tagFilter),p.tagFilter=n.tagFilter,p.filteredPoolCount=r.photos.total,v=a):(n.id&&n.id!==r.group.nsid?p.id=n.id:p.id=r.group.nsid,v=o),v.exists(p.id)?(v.setValue(p.id,"photoPageList",p.photoPageList),v.setValue(p.id,"group",p.group),v.setValue(p.id,"filteredPoolCount",parseInt(p.filteredPoolCount,10)||0),p.group.setValue("poolCount",parseInt(r.group.poolCount,10)||0)):v.add(p),d}function r(t,n){var r=this,i=this._processParams(t),s={apiResponse:n.callAPI("flickr.groups.pools.getPhotos",i,!0),photoModelRegistry:n.getModelRegistry("photo-models"),personModelRegistry:n.getModelRegistry("person-models"),groupPoolModelRegistry:n.getModelRegistry("group-pool-models"),photoEngagementModelRegistry:n.getModelRegistry("photo-engagement-models"),photoStatsModelRegistry:n.getModelRegistry("photo-stats-models"),groupModelRegistry:n.getModelRegistry("group-models")};return t.personFilter&&(s.groupPoolByPersonModelRegistry=n.getModelRegistry("group-pool-by-person-models")),t.tagFilter&&(s.groupPoolByTagModelRegistry=n.getModelRegistry("group-pool-by-tag-models")),(new e.FlickrPromise(s)).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-pools-getPhotos-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-groups-pools-getPhotos"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-models","person-models","photo-engagement-models","photo-stats-models","group-models","group-pool-models","group-pool-by-person-models","group-pool-by-tag-models"]});
YUI.add("group-contributor-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,attributes:{nsid:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},dateJoined:{validator:function(t){return e.AttributeHelpers.validateDate(t)},setter:function(t){return e.AttributeHelpers.coerceDate(t)},serialize:function(e){return e.format("X")},deserialize:function(t){return e.moment(t,"X")}},groupDiscussionCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)},defaultValue:0},groupPhotoCount:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)},defaultValue:0},pathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},rank:{validator:function(t){return e.AttributeHelpers.validateInteger(t)},setter:function(t){return e.AttributeHelpers.coerceInteger(t)}},realname:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},username:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},latestPhotoId:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},latestPhotoTitle:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},avatarUrl:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)}},latestPhotoUrl:{readOnly:!0,derivedBy:["contributorUrl","latestPhotoId"],getter:function(e,t){return this.getValue(t,"latestPhotoId")?this.getValue(t,"contributorUrl")+this.getValue(t,"latestPhotoId")+"/":!1}},displayname:{readOnly:!0,derivedBy:["username"],getter:function(e,t){return this.getValue(t,"username")}},contributorUrl:{readOnly:!0,derivedBy:["id","pathAlias"],getter:function(e,t){return"/photos/"+(this.getValue(t,"pathAlias")||this.getValue(t,"nsid"))+"/"}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","attribute-helpers"]});
YUI.add("flickr-groups-getTopContributors-fetcher",function(e){"use strict";function t(e){var t={group_id:e.id,type:"all",extras:"include_viewer"};return t}function n(e,t){var n=e[0],i=e[1],s=e[2],o,u={photoContributors:[],discussionContributors:[]},a;return n&&n.contributors&&[{k:"photos",v:"photoContributors"},{k:"discussions",v:"discussionContributors"}].forEach(function(e){n.contributors[e.k]&&(u.id=t.id,o=n.contributors[e.k],o.contributor&&o.contributor.forEach(function(n){a=r(n,t.id),s.exists(a.id)||s.add(a),u[e.v].push(s.proxy(a.id))}))}),n&&n.viewer&&n.viewer.length!==0?(a=r(n.viewer,t.id),s.exists(a.id)||s.add(a),u.viewer=s.proxy(a.id)):u.viewer=null,i.exists(u.id)||i.add(u),i.proxy(u.id)}function r(t,n){var r={id:t.id+"-"+n,nsid:t.id,dateJoined:t.dateJoined?e.moment(t.dateJoined.toString(),"X"):e.moment(),groupDiscussionCount:t.groupDiscussionCount,groupPhotoCount:t.groupPhotoCount,pathAlias:t.pathAlias,rank:t.rank,realname:t.realname,username:t.username,avatarUrl:e.URLHelper.getBuddyIconURL(t.id,t.iconfarm,t.iconserver)};return t.latestPhoto&&(r.latestPhotoId=t.latestPhoto.id,r.latestPhotoTitle=t.latestPhoto.name),r}function i(t,n){var r=this;return e.Promise.all([n.callAPI("flickr.groups.getTopContributors",this._processParams(t),!0),n.getModelRegistry("group-top-contributors-models"),n.getModelRegistry("group-contributor-models")]).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-getTopContributors-fetcher] failed getting or processing API response:",e),e})}e.namespace("ModelFetchers")["flickr-groups-getTopContributors"]={run:i,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper","moment","url-helper"],optional:["group-top-contributors-models","group-contributor-models"]});
YUI.add("group-top-contributors-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{name:this.name,remote:{read:function(t){var n=this;return e.ModelFetchers["flickr-groups-getTopContributors"].run(t,this.appContext).then(function(e){return n})}},attributes:{viewer:{isModel:!0,defaultValue:null},contributors:{isCollection:!0},photoContributors:{isCollection:!0},discussionContributors:{isCollection:!0}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-groups-getTopContributors-fetcher","attribute-helpers"]});
YUI.add("flickr-groups-fave-fetcher",function(e){"use strict";function t(e){}function n(t,n){var r=this;return e.Promise.all([n.callAPI("flickr.groups.fave",t),n.getModelRegistry("person-groups-models")]).then(r._processResponse,function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-fave-fetcher] failed getting or processing API response:",e),e})}e.namespace("ModelFetchers")["flickr-groups-fave"]={run:n,_processResponse:t}},"@VERSION@",{requires:["flickr-promise","flickr-promise"],optional:["person-groups-models","api-helper"]});
YUI.add("flickr-groups-unfave-fetcher",function(e){"use strict";function t(e){}function n(t,n){var r=this;return e.Promise.all([n.callAPI("flickr.groups.unfave",t),n.getModelRegistry("person-groups-models")]).then(r._processResponse,function(e){throw n[e.fatal?"error":"debug"]("[flickr-groups-unfave-fetcher] failed getting or processing API response:",e),e})}e.namespace("ModelFetchers")["flickr-groups-unfave"]={run:n,_processResponse:t}},"@VERSION@",{requires:["flickr-promise","flickr-promise"],optional:["person-groups-models","api-helper"]});
YUI.add("flickr-people-getGroupsWithStatus-fetcher",function(e){"use strict";function t(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=r.groups,a=n.id,f,l={},c=[];if(u)return e.Array.each(u,function(t,r){var i,u,a,l=s.parseGroupModel(n.id,n.pathAlias,t);i=s.exists(t.id)?s.proxy(t.id):s.add(l),c.push(i),t.viewDates?(t.viewDates.pool!=="0"?u=e.moment.unix(t.viewDates.pool):u=o.getDefaultViewedDate(),t.viewDates.discussions!=="0"?a=e.moment.unix(t.viewDates.discussions):a=o.getDefaultViewedDate()):(u=o.getDefaultViewedDate(),a=o.getDefaultViewedDate()),f={id:l.id,viewedPool:u,viewedDiscussions:a,group:i},o.exists(f.id)||o.add(f)}),l={id:a,memberCount:r.members?r.members:null,moderatorCount:0,adminCount:0,invitedCount:0},l[n.attribute]=c,i.exists(a)?i.setValue(a,n.attribute,l[n.attribute]):i.add(l),l[n.attribute]}function n(t,n){var r=this;return e.Promise.all([n.callAPI("flickr.people.getGroupsWithStatus",{extras:e.APIHelper.request.getRebootGroupExtras()+", icon_urls, date_activity, date_last_viewed",user_id:t.id,status:t.status},!0),n.getModelRegistry("person-groups-models"),n.getModelRegistry("group-models"),n.getModelRegistry("group-activity-models")]).then(function(e){return r._processResponse(e,t)},function(e){throw n.error(e.message),n.error(e.stack),n[e.fatal?"error":"debug"]("[flickr-people-getGroupsWithStatus-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-people-getGroupsWithStatus"]={run:n,_processResponse:t}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["person-groups-models","group-models"]});
YUI.add("flickr-photos-getContext-fetcher",function(e){"use strict";function t(t,n){var r={photo_id:t.photoId,num_prev:t.numNext,num_next:t.numPrev,view_as:t.viewAs,extras:e.APIHelper.request.getRebootPhotoExtras().concat(["can_download","can_share","o_dims"])};return r}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=t[4],a=[],f=[],l=s.proxy(n.photoId),c=l.getValue("owner"),h,p,d,v,m,g,y=[];return h=r.prevphotos,p=r.nextphotos,f=e.APIHelper.response.parsePhotos({photos:h.photo,existingPerson:c,photoModelRegistry:s,photoEngagementModelRegistry:o,photoStatsModelRegistry:u}),a=e.APIHelper.response.parsePhotos({photos:p.photo,existingPerson:c,photoModelRegistry:s,photoEngagementModelRegistry:o,photoStatsModelRegistry:u}),v=i.getValue(n.id,"photoContextList"),m=v.hasMinBoundary?v.hasMinBoundary():!1,g=v.hasMaxBoundary?v.hasMaxBoundary():!1,d=v.getList(),y=e.APIHelper.response.addOrReplaceListByContext({model:l,next:f,prev:a.reverse(),hasMin:m,hasMax:g,current:d,numNext:n.numNext,numPrev:n.numPrev}),i.setValue(n.id,"photoContextList",y),{next:f,previous:a.reverse()}}function r(t,n){var r=this;return e.Promise.all([n.callAPI("flickr.photos.getContext",this._processParams(t,n),!0),n.getModelRegistry("photostream-models"),n.getModelRegistry("photo-models"),n.getModelRegistry("photo-engagement-models"),n.getModelRegistry("photo-stats-models")]).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-photos-getContext-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-photos-getContext"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photostream-models","photo-models","photo-engagement-models","photo-stats-models"]});
YUI.add("flickr-people-getPhotos-fetcher",function(e){"use strict";function t(t){var n={per_page:t.perPage||20,page:t.page||1,extras:e.APIHelper.request.getRebootPhotoExtras(),get_user_info:1};return t.id||t.userId?n.user_id=(t.id||t.userId).split("-")[0]:t.pathAlias&&(n.path_alias=t.pathAlias),t.privacyFilter&&(n.privacy_filter=t.privacyFilter),t.safeSearch&&(n.safe_search=t.safeSearch),t.media&&(n.media=t.media),t.withPhotoId&&(n.jump_to=t.withPhotoId),t.contentType&&(n.content_type=t.contentType),n}function n(t,n){var r=t[0],i=t[1],s=t[2],o=t[3],u=t[4],a=t[5],f,l,c=r.user.nsid,h=n.id||n.userId;return l={id:c,pathAlias:r.user.pathAlias,owner:e.APIHelper.response.parsePerson(r.user),totalItems:r.photos.total},h&&h!==c&&(l.id=h),s.exists(l.owner.id)||s.add(l.owner),l.owner=s.proxy(l.owner.id),f=e.APIHelper.response.parsePhotos({photos:r.photos.photo,ownerID:r.photos.owner,personModelRegistry:s,photoModelRegistry:i,photoEngagementModelRegistry:u,photoStatsModelRegistry:a}),l.photoPageList={perPage:r.photos.perpage,page:r.photos.page,pageContent:f,totalItems:r.photos.total},o.exists(l.id)?(o.setValue(l.id,"photoPageList",l.photoPageList),o.setValue(l.id,"totalItems",parseInt(r.photos.total,10)||0)):o.add(l),f}function r(t,n){var r=this;return e.Promise.all([n.callAPI("flickr.people.getPhotos",this._processParams(t),!0),n.getModelRegistry("photo-models"),n.getModelRegistry("person-models"),n.getModelRegistry("photostream-models"),n.getModelRegistry("photo-engagement-models"),n.getModelRegistry("photo-stats-models")]).then(function(e){return r._processResponse(e,t)},function(e){throw n[e.fatal?"error":"debug"]("[flickr-people-getPhotos-fetcher] failed getting or processing API response:",e),e})}e.namespace("ListFetchers")["flickr-people-getPhotos"]={run:r,_processParams:t,_processResponse:n}},"@VERSION@",{requires:["flickr-promise","api-helper"],optional:["photo-models","person-models","photostream-models","photo-engagement-models","photo-stats-models"]});
YUI.add("photostream-models",function(e){function t(e){t.superclass.constructor.call(this,e)}e.Models[this.name]=t,e.extend(t,e.FlickrModelRegistry,{langBundles:this.details.langBundles,name:this.name,remote:{read:function(t){return e.ListFetchers["flickr-people-getPhotos"].run(t,this.appContext)}},attributes:{displayType:{readOnly:!0,defaultFn:function(){return"photostream"}},title:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){var t=this.appContext.getViewer(),n;return t&&t.nsid===e?this.intlMessage({intlName:"models.YOUR_PHOTOSTREAM"}):(n=this.getValue(e,"owner"),n?this.intlMessage({intlName:"models.USER_PHOTOSTREAM",name:n.getValue("displayname")}):this.intlMessage({intlName:"models.PHOTOSTREAM"}))}},pathAlias:{validator:function(t,n){return e.AttributeHelpers.validateString(t)},setter:function(t){return e.AttributeHelpers.coerceString(t)||undefined},defaultFn:function(e){return e}},owner:{isModel:!0},photoPageList:{isCollection:!0,pageFetch:{listFetcher:e.ListFetchers["flickr-people-getPhotos"]}},photoContextList:{isListProxy:!0,contextFetch:{listFetcher:e.ListFetchers["flickr-photos-getContext"],listItemIdField:"photoId"}},url:{readOnly:!0,derivedBy:["owner"],defaultFn:function(e){var t=this.getValue(e,"owner"),n=t?t.getValue("pathAlias"):e;return"/photos/"+n+"/"}},totalItems:{defaultFn:function(){return null}},urlSuffix:{readOnly:!0,defaultFn:function(e){return"photostream"}}}})},"@VERSION@",{requires:["flickr-model-registry","flickr-promise","flickr-photos-getContext-fetcher","flickr-people-getPhotos-fetcher"],langBundles:["models"]});
YUI.add("type-validator",function(e){function r(){var e;for(e in n)(function(){var r=n[e];t[e]=function(e){return r.test(e)}})()}var t={},n={nsid:/([0-9]+@N[0-9]+)/,pathAlias:/([0-9a-zA-Z-_]+)/,photoId:/[0-9]+/,bookId:/[0-9]+/,orderId:/[0-9]+/};r(),e.TypeValidator={matches:t}},"@VERSION@",{requires:["person-models","flickr-promise"]});
